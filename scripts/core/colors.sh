#!/bin/bash

# Configura√ß√µes de seguran√ßa e tratamento de erros
set -euo pipefail

# colors.sh - √öNICA fonte de cores e fun√ß√µes de output
# Este arquivo deve ser carregado PRIMEIRO por todos os scripts
# Vers√£o: 1.0 - Dev Senior Architecture

# =============================================================================
# DEFINI√á√ÉO DE CORES - √öNICA E CENTRALIZADA
# =============================================================================

# Cores b√°sicas
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly PURPLE='\033[0;35m'
readonly CYAN='\033[0;36m'
readonly WHITE='\033[1;37m'
readonly GRAY='\033[0;37m'
readonly NC='\033[0m' # No Color

# Cores de fundo
readonly BG_RED='\033[41m'
readonly BG_GREEN='\033[42m'
readonly BG_YELLOW='\033[43m'
readonly BG_BLUE='\033[44m'

# Formata√ß√£o
readonly BOLD='\033[1m'
readonly DIM='\033[2m'
readonly UNDERLINE='\033[4m'
readonly BLINK='\033[5m'
readonly REVERSE='\033[7m'

# =============================================================================
# FUN√á√ïES DE OUTPUT - √öNICAS E PADRONIZADAS
# =============================================================================

# Fun√ß√£o para output de sucesso
print_success() {
    echo -e "${GREEN}[‚úì]${NC} $1"
}

# Fun√ß√£o para output de informa√ß√£o
print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# Fun√ß√£o para output de aviso
print_warning() {
    echo -e "${YELLOW}[‚ö†]${NC} $1"
}

# Fun√ß√£o para output de erro
print_error() {
    echo -e "${RED}[‚úó]${NC} $1" >&2
}

# Fun√ß√£o para output de passo/etapa
print_step() {
    echo -e "${CYAN}[STEP]${NC} $1"
}

# Fun√ß√£o para cabe√ßalhos
print_header() {
    echo
    echo -e "${PURPLE}${BOLD}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${PURPLE}${BOLD}$1${NC}"
    echo -e "${PURPLE}${BOLD}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo
}

# Fun√ß√£o para debug (apenas se DEBUG=true)
print_debug() {
    if [[ "${DEBUG:-false}" == "true" ]]; then
        echo -e "${GRAY}[DEBUG]${NC} $1" >&2
    fi
}

# Fun√ß√£o para progresso
print_progress() {
    echo -e "${CYAN}‚è≥${NC} $1..."
}

# Fun√ß√£o para mostrar comandos sendo executados
print_command() {
    echo -e "${DIM}${GRAY}$ $1${NC}"
}

# =============================================================================
# FUN√á√ïES DE BANNER - PADRONIZADAS
# =============================================================================

# Banner principal do sistema
print_main_banner() {
    clear
    echo -e "${PURPLE}${BOLD}"
    echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó "
    echo "‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó"
    echo "‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù"
    echo "‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù "
    echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë     "
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù      ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù     "
    echo ""
    echo "                üöÄ SETUP COMPLETO DE DESENVOLVIMENTO üöÄ"
    echo "                     Terminal + VS Code + Apps"
    echo "                     v3.0 - Dev Senior Edition"
    echo -e "${NC}"
}

# Banner para m√≥dulos espec√≠ficos
print_module_banner() {
    local module_name="$1"
    local icon="${2:-üîß}"
    
    echo -e "${CYAN}${BOLD}"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    echo "    $icon $module_name"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    echo -e "${NC}"
}

# =============================================================================
# FUN√á√ïES DE VALIDA√á√ÉO DE OUTPUT
# =============================================================================

# Verificar se terminal suporta cores
colors_supported() {
    if [[ -t 1 ]] && command -v tput >/dev/null 2>&1; then
        local colors
        colors=$(tput colors 2>/dev/null)
        [[ $colors -ge 8 ]]
    else
        return 1
    fi
}

# Desabilitar cores se n√£o suportadas
if ! colors_supported; then
    print_warning "Terminal n√£o suporta cores, usando output simples"
    # Redefinir todas as cores como vazias
    RED='' GREEN='' YELLOW='' BLUE='' PURPLE='' CYAN='' WHITE='' GRAY='' NC=''
    BG_RED='' BG_GREEN='' BG_YELLOW='' BG_BLUE=''
    BOLD='' DIM='' UNDERLINE='' BLINK='' REVERSE=''
fi

# =============================================================================
# FUN√á√ÉO DE AUTO-TESTE
# =============================================================================

# Testar se todas as fun√ß√µes est√£o funcionando
test_colors() {
    print_header "Teste do Sistema de Cores"
    print_success "Teste de sucesso"
    print_info "Teste de informa√ß√£o"
    print_warning "Teste de aviso"
    print_error "Teste de erro"
    print_step "Teste de passo"
    print_progress "Teste de progresso"
    print_debug "Teste de debug (apenas se DEBUG=true)"
    print_command "echo 'Teste de comando'"
    echo
    print_info "Sistema de cores carregado com sucesso!"
}

# Executar auto-teste se chamado diretamente
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    DEBUG=true test_colors
fi