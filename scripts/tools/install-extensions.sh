#!/bin/bash

# install-extensions.sh - Instala extens√µes do VS Code com verifica√ß√£o inteligente
# Autor: Bruno Hiago
# Vers√£o: 3.0 - Dev Senior Architecture

# =============================================================================
# CARREGAMENTO DO SISTEMA
# =============================================================================

# Carregar sistema core
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
if ! source "$SCRIPT_DIR/../core/bootstrap.sh"; then
    printf "\033[0;31m‚ùå ERRO CR√çTICO: Falha ao carregar sistema core\033[0m\n" >&2
    exit 1
fi

# =============================================================================
# FUN√á√ÉO PRINCIPAL
# =============================================================================

main() {
    print_module_banner "INSTALA√á√ÉO INTELIGENTE DE EXTENS√ïES" "üì¶"
    
    # Verificar se VS Code est√° instalado
    if ! command_exists code; then
        print_error "VS Code n√£o est√° instalado!"
        print_info "üí° Execute setup-vscode.sh primeiro"
        exit 1
    fi
    
    # Usar arquivo de extens√µes do novo caminho
    local extensions_file="${1:-$VSCODE_EXTENSIONS_FILE}"
    
    if [[ ! -f "$extensions_file" ]]; then
        print_error "Arquivo de extens√µes n√£o encontrado: $extensions_file"
        print_info "üí° Estrutura esperada: $VSCODE_CONFIG_DIR/extensions.txt"
        exit 1
    fi
    
    print_info "üìÑ Arquivo: $extensions_file"
    
    # Contar extens√µes
    local total_extensions
    total_extensions=$(grep -v '^#' "$extensions_file" | grep -v '^$' | wc -l)
    print_info "üìä Total de extens√µes: $total_extensions"
    
    # Contadores
    local installed=0
    local skipped=0
    local failed=0
    
    echo
    print_step "üîç Verificando e instalando extens√µes..."
    
    # Ler e processar cada extens√£o
    while IFS= read -r extension || [[ -n "$extension" ]]; do
        # Pular coment√°rios e linhas vazias
        [[ "$extension" =~ ^#.*$ ]] && continue
        [[ -z "$extension" ]] && continue
        
        # Remover espa√ßos em branco
        extension=$(echo "$extension" | xargs)
        [[ -z "$extension" ]] && continue
        
        # Verificar se j√° est√° instalada
        if vscode_extension_installed "$extension"; then
            print_info "‚è≠Ô∏è  J√° instalada: $extension"
            ((skipped++))
        elif install_vscode_extension "$extension"; then
            ((installed++))
        else
            ((failed++))
        fi
    done < "$extensions_file"
    
    # Resumo final
    echo
    print_header "üìä RESUMO DA INSTALA√á√ÉO"
    print_success "‚úÖ Novas instala√ß√µes: $installed"
    print_info "‚è≠Ô∏è  J√° existentes: $skipped"
    
    if [[ $failed -gt 0 ]]; then
        print_warning "‚ùå Falharam: $failed"
        exit 1
    else
        print_success "üéâ Todas as extens√µes foram processadas com sucesso!"
    fi
}

# Executar apenas se chamado diretamente
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi